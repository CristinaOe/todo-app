{"ast":null,"code":"var _jsxFileName = \"/Users/cristinaoechsle/code/CristinaOe/todo-list/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport CreateTask from \"../modals/CreateTask\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [modal, setModal] = useState(false);\n  const [taskList, setTaskList] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const searchHandler = () => {};\n\n  useEffect(() => {\n    let arr = localStorage.getItem(\"taskList\");\n\n    if (arr) {\n      let obj = JSON.parse(arr);\n      setTaskList(obj);\n    }\n  }, []);\n\n  const deleteTask = index => {\n    let tempList = taskList;\n    tempList.splice(index, 1);\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(tempList);\n    window.location.reload();\n  };\n\n  const updateListArray = (obj, index) => {\n    let tempList = taskList;\n    tempList[index] = obj;\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(tempList);\n    window.location.reload();\n  };\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const saveTask = taskObj => {\n    let tempList = taskList;\n    tempList.push(taskObj);\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(taskList);\n    setModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-2\",\n        onClick: () => setModal(true),\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: taskList && taskList.map((obj, index) => /*#__PURE__*/_jsxDEV(Card, {\n        taskObj: obj,\n        index: index,\n        deleteTask: deleteTask,\n        updateListArray: updateListArray,\n        term: searchTerm,\n        searchKeyword: searchHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"done-task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTask, {\n      toggle: toggle,\n      modal: modal,\n      save: saveTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoList, \"SM1EQwotyz2l3zonJZLZXScS210=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/cristinaoechsle/code/CristinaOe/todo-list/src/components/TodoList.js"],"names":["React","useEffect","useState","CreateTask","Card","TodoList","modal","setModal","taskList","setTaskList","searchTerm","setSearchTerm","searchHandler","arr","localStorage","getItem","obj","JSON","parse","deleteTask","index","tempList","splice","setItem","stringify","window","location","reload","updateListArray","toggle","saveTask","taskObj","push","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CreateTask from \"../modals/CreateTask\";\nimport Card from \"./Card\";\n\nconst TodoList = () => {\n  const [modal, setModal] = useState(false);\n  const [taskList, setTaskList] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const searchHandler = () => {};\n\n  useEffect(() => {\n    let arr = localStorage.getItem(\"taskList\");\n\n    if (arr) {\n      let obj = JSON.parse(arr);\n      setTaskList(obj);\n    }\n  }, []);\n\n  const deleteTask = (index) => {\n    let tempList = taskList;\n    tempList.splice(index, 1);\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(tempList);\n    window.location.reload();\n  };\n\n  const updateListArray = (obj, index) => {\n    let tempList = taskList;\n    tempList[index] = obj;\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(tempList);\n    window.location.reload();\n  };\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const saveTask = (taskObj) => {\n    let tempList = taskList;\n    tempList.push(taskObj);\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(taskList);\n    setModal(false);\n  };\n\n  return (\n    <>\n      <div className='header text-center'>\n        <h3>Todo List</h3>\n        <button className='btn btn-primary mt-2' onClick={() => setModal(true)}>\n          Create Task\n        </button>\n      </div>\n      <div className='task-container'>\n        {taskList &&\n          taskList.map((obj, index) => (\n            <Card\n              taskObj={obj}\n              index={index}\n              deleteTask={deleteTask}\n              updateListArray={updateListArray}\n              term={searchTerm}\n              searchKeyword={searchHandler}\n            />\n          ))}\n      </div>\n      <div className='done-task'></div>\n      <CreateTask toggle={toggle} modal={modal} save={saveTask} />\n    </>\n  );\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}