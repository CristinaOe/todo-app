{"ast":null,"code":"var _jsxFileName = \"/Users/cristinaoechsle/code/CristinaOe/todo-list/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport CreateTask from \"../modals/CreateTask\";\nimport Card from \"./Card\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [modal, setModal] = useState(false);\n  const [taskList, setTaskList] = useState([]);\n  const [list, updateList] = useState(taskObj);\n  useEffect(() => {\n    let arr = localStorage.getItem(\"taskList\");\n\n    if (arr) {\n      let obj = JSON.parse(arr);\n      setTaskList(obj);\n    }\n  }, []);\n\n  const deleteTask = index => {\n    let tempList = taskList;\n    tempList.splice(index, 1);\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(tempList);\n    window.location.reload();\n  };\n\n  const updateListArray = (obj, index) => {\n    let tempList = taskList;\n    tempList[index] = obj;\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(tempList);\n    window.location.reload();\n  };\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const saveTask = taskObj => {\n    let tempList = taskList;\n    tempList.push(taskObj);\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(taskList);\n    setModal(false);\n  };\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    const items = Array.from(list);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    updateList(items);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-2\",\n        onClick: () => setModal(true),\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleOnDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"grocery-list\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-container\",\n            children: taskList && taskList.map((obj, index) => /*#__PURE__*/_jsxDEV(Card, {\n              taskObj: obj,\n              index: index,\n              deleteTask: deleteTask,\n              updateListArray: updateListArray\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"done-task\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \" Done Tasks \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTask, {\n      toggle: toggle,\n      modal: modal,\n      save: saveTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoList, \"fPhy1Xn3OJ6SfwDG/XQf5zvs56o=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/cristinaoechsle/code/CristinaOe/todo-list/src/components/TodoList.js"],"names":["React","useEffect","useState","CreateTask","Card","DragDropContext","Droppable","TodoList","modal","setModal","taskList","setTaskList","list","updateList","taskObj","arr","localStorage","getItem","obj","JSON","parse","deleteTask","index","tempList","splice","setItem","stringify","window","location","reload","updateListArray","toggle","saveTask","push","handleOnDragEnd","result","destination","items","Array","from","reorderedItem","source","provided","droppableProps","innerRef","map","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CreateTask from \"../modals/CreateTask\";\nimport Card from \"./Card\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nconst TodoList = () => {\n  const [modal, setModal] = useState(false);\n  const [taskList, setTaskList] = useState([]);\n  const [list, updateList] = useState(taskObj);\n\n  useEffect(() => {\n    let arr = localStorage.getItem(\"taskList\");\n\n    if (arr) {\n      let obj = JSON.parse(arr);\n      setTaskList(obj);\n    }\n  }, []);\n\n  const deleteTask = (index) => {\n    let tempList = taskList;\n    tempList.splice(index, 1);\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(tempList);\n    window.location.reload();\n  };\n\n  const updateListArray = (obj, index) => {\n    let tempList = taskList;\n    tempList[index] = obj;\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(tempList);\n    window.location.reload();\n  };\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const saveTask = (taskObj) => {\n    let tempList = taskList;\n    tempList.push(taskObj);\n    localStorage.setItem(\"taskList\", JSON.stringify(tempList));\n    setTaskList(taskList);\n    setModal(false);\n  };\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    const items = Array.from(list);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateList(items);\n  }\n\n  return (\n    <>\n      <div className='header text-center'>\n        <h3>Todo List</h3>\n        <button className='btn btn-primary mt-2' onClick={() => setModal(true)}>\n          Create Task\n        </button>\n      </div>\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        <Droppable droppableId='grocery-list'>\n          {(provided) => (\n            <div\n              className='columns'\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              <div className='task-container'>\n                {taskList &&\n                  taskList.map((obj, index) => (\n                    <Card\n                      taskObj={obj}\n                      index={index}\n                      deleteTask={deleteTask}\n                      updateListArray={updateListArray}\n                    />\n                  ))}\n              </div>\n              <div className='done-task'>\n                <h3> Done Tasks </h3>\n              </div>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n\n      <CreateTask toggle={toggle} modal={modal} save={saveTask} />\n    </>\n  );\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}