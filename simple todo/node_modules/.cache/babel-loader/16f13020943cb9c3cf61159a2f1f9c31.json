{"ast":null,"code":"var _jsxFileName = \"/Users/cristinaoechsle/code/CristinaOe/todo-list/src/modals/EditTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTaskPopup = _ref => {\n  _s();\n\n  let {\n    modal,\n    toggle,\n    updateTask,\n    taskObj\n  } = _ref;\n  const [taskName, setTaskName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"taskName\") {\n      setTaskName(value);\n    } else {\n      setDescription(value);\n    }\n  };\n\n  useEffect(() => {\n    setTaskName(taskObj.Name);\n    setDescription(taskObj.Description);\n  }, []);\n\n  const handleUpdate = e => {\n    e.preventDefault();\n    let tempObj = {};\n    tempObj[\"Name\"] = taskName;\n    tempObj[\"Description\"] = description;\n    updateTask(tempObj);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: taskName,\n          onChange: handleChange,\n          name: \"taskName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          className: \"form-control\",\n          value: description,\n          onChange: handleChange,\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: toggle,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditTaskPopup, \"PUDSgfUPnbXnS1d5kjdPuAEo0Gc=\");\n\n_c = EditTaskPopup;\nexport default EditTaskPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTaskPopup\");","map":{"version":3,"sources":["/Users/cristinaoechsle/code/CristinaOe/todo-list/src/modals/EditTask.js"],"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","EditTaskPopup","modal","toggle","updateTask","taskObj","taskName","setTaskName","description","setDescription","handleChange","e","name","value","target","Name","Description","handleUpdate","preventDefault","tempObj"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nconst EditTaskPopup = ({ modal, toggle, updateTask, taskObj }) => {\n  const [taskName, setTaskName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"taskName\") {\n      setTaskName(value);\n    } else {\n      setDescription(value);\n    }\n  };\n\n  useEffect(() => {\n    setTaskName(taskObj.Name);\n    setDescription(taskObj.Description);\n  }, []);\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    let tempObj = {};\n    tempObj[\"Name\"] = taskName;\n    tempObj[\"Description\"] = description;\n    updateTask(tempObj);\n  };\n\n  return (\n    <Modal isOpen={modal} toggle={toggle}>\n      <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n      <ModalBody>\n        <div className='form-group'>\n          <label>Task Name</label>\n          <input\n            type='text'\n            className='form-control'\n            value={taskName}\n            onChange={handleChange}\n            name='taskName'\n          />\n        </div>\n        <div className='form-group'>\n          <label>Description</label>\n          <textarea\n            rows='5'\n            className='form-control'\n            value={description}\n            onChange={handleChange}\n            name='description'\n          ></textarea>\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <Button color='primary' onClick={handleUpdate}>\n          Update\n        </Button>{\" \"}\n        <Button color='secondary' onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default EditTaskPopup;\n"]},"metadata":{},"sourceType":"module"}